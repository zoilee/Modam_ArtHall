plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.arthall'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }  // JitPack 레포지토리 추가
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation' //validation 유효성 검사 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //OAuth2 연동 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' // Spring Security Thymeleaf 통합 추가
	implementation 'org.projectlombok:lombok'
	implementation 'io.github.cdimascio:java-dotenv:5.2.2' // 모든 java프로젝트에서 사용 가능한 dotenv라이브러리
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.0.0' //Thymeleaf Layout Dialect 의존성 추가
	implementation 'me.paulschwarz:spring-dotenv:3.0.0' // Spring Boot 프로젝트만 사용 가능한 dotenv라이브러리
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//email발송
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// 아임포트 관련 //
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
	
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-json'


}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}

